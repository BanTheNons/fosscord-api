on:
  workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Publish Release

jobs:
  insiders-build:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
        include:
          - os: windows
            build: npx caxa -i . -m 'This_may_take_a_while_to_run_the_first_time_please_wait...' --output 'fosscord-server-windows.exe' -- '{{caxa}}/node_modules/.bin/node' '{{caxa}}/dist/start.js'
            artifact: fosscord-server-windows.exe
          - os: macos
            build: npx caxa -i . -m 'This may take a while to run the first time, please wait...' --output 'fosscord-server.app' -- '{{caxa}}/node_modules/.bin/node' '{{caxa}}/dist/start.js' && tar -czf 'fosscord-server-macos.app.tgz' 'fosscord-server.app'
            artifact: fosscord-server-macos.app.tgz
          - os: ubuntu
            build: npx caxa -i . -m 'This may take a while to run the first time, please wait...' --output 'fosscord' -- '{{caxa}}/node_modules/.bin/node' '{{caxa}}/dist/start.js' && tar -czf 'fosscord-server-linux.tgz' 'fosscord'
            artifact: fosscord-server-linux.tgz
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        env:
          MONGOMS_VERSION: 4.4.3
        with:
          node-version: 14
      - run: |
          cd util
          npm i
          npm run build
          npm pack
          cd ../api
          npm i ../util/fosscord-util-1.0.0.tgz
          npm run build
          npm pack
          cd ../cdn
          npm i ../util/fosscord-util-1.0.0.tgz
          npm run build
          npm pack
          cd ../gateway
          npm i ../util/fosscord-util-1.0.0.tgz
          npm run build
          npm pack
          cd ../bundle
          npm i ../util/fosscord-util-1.0.0.tgz
          npm i ../cdn/fosscord-cdn-1.0.0.tgz
          npm i ../gateway/fosscord-gateway-1.0.0.tgz
          npm i ../api/fosscord-api-1.0.0.tgz
          npm i caxa
          npm run build:bundle
          ${{ matrix.build }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: bundle/${{ matrix.artifact }}

  release:
    needs: [insiders-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: fosscord-server-windows.exe
      - uses: actions/download-artifact@v2
        with:
          name: fosscord-server-macos.app.tgz
      - uses: actions/download-artifact@v2
        with:
          name: fosscord-server-linux.tgz
      - uses: actions/create-release@v1
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ secrets.RELEASE_VERSION }}
          release_name: Server v${{ secrets.RELEASE_VERSION }}
          draft: false
          prerelease: true # TODO: change this to false
          body: >
            ## Download

            - [Windows](https://github.com/fosscord/fosscord-server/releases/download/v${{ secrets.RELEASE_VERSION }}/fosscord-server-windows.exe)

            - [MacOS](https://github.com/fosscord/fosscord-server/releases/download/v${{ secrets.RELEASE_VERSION }}/fosscord-server-macos.app.tgz)

            - [Linux](https://github.com/fosscord/fosscord-server/releases/download/v${{ secrets.RELEASE_VERSION }}/fosscord-server-linux.tgz)

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: fosscord-server-windows.exe
          asset_name: fosscord-server-windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: fosscord-server-macos.app.tgz
          asset_name: fosscord-server-macos.app.tgz
          asset_content_type: application/gzip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: fosscord-server-linux.tgz
          asset_name: fosscord-server-linux.tgz
          asset_content_type: application/gzip
